<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model Java API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.htm">Packages</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="namespacemembers.htm">Namespace&nbsp;Members</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="pages.htm">Related&nbsp;Pages</a></div>
<h1>SRM.BaseSRF_3D Class Reference</h1>The <a class="el" href="a00128.htm">BaseSRF_3D</a> abstract class is the base class for the 3D SRFs.  
<a href="#_details">More...</a>
<p>
Inheritance diagram for SRM.BaseSRF_3D:<p><center><img src="a00373.png" border="0" usemap="#a00374" alt="Inheritance graph"></center>
<map name="a00374">
<area href="a00131.htm" shape="rect" coords="369,5,617,32" alt="">
<area href="a00132.htm" shape="rect" coords="356,56,631,83" alt="">
<area href="a00182.htm" shape="rect" coords="404,107,583,133" alt="">
<area href="a00184.htm" shape="rect" coords="397,157,589,184" alt="">
<area href="a00186.htm" shape="rect" coords="399,208,588,235" alt="">
<area href="a00188.htm" shape="rect" coords="375,259,612,285" alt="">
<area href="a00189.htm" shape="rect" coords="375,309,612,336" alt="">
<area href="a00190.htm" shape="rect" coords="365,360,621,387" alt="">
<area href="a00197.htm" shape="rect" coords="369,411,617,437" alt="">
<area href="a00201.htm" shape="rect" coords="376,461,611,488" alt="">
<area href="a00213.htm" shape="rect" coords="412,512,575,539" alt="">
<area href="a00214.htm" shape="rect" coords="403,563,584,589" alt="">
<area href="a00215.htm" shape="rect" coords="387,613,600,640" alt="">
<area href="a00216.htm" shape="rect" coords="384,664,603,691" alt="">
<area href="a00126.htm" shape="rect" coords="7,335,119,361" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00003.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a0">createCoordinate3D</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a 3D coordinate object. </em> <a href="#a0"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a1">createCoordinate3D</a> (double coord_comp1, double coord_comp2, double coord_comp3)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a 3D coordinate object. </em> <a href="#a1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double[]&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a2">getCoordinate3DValues</a> (<a class="el" href="a00138.htm">Coord3D</a> coord)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the 3D coordinate component values. </em> <a href="#a2"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a3">changeCoordinate3DSRF</a> (<a class="el" href="a00138.htm">Coord3D</a> src, <a class="el" href="a00138.htm">Coord3D</a> tgt)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a coordinate's values to this SRF. </em> <a href="#a3"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a4">changeCoordinate3DArraySRF</a> (<a class="el" href="a00138.htm">Coord3D</a>[] src, <a class="el" href="a00138.htm">Coord3D</a>[] tgt, <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>[] region)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of 3D coordinate to this SRF. </em> <a href="#a4"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a5">setValidRegion</a> (int component, <a class="el" href="a00367.htm#a149">SRM_Interval_Type</a> type, double lower, double upper)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Valid Region for this SRF. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a6">setExtendedValidRegion</a> (int component, <a class="el" href="a00367.htm#a149">SRM_Interval_Type</a> type, double extended_lower, double lower, double upper, double extended_upper)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set the Extended Valid Region for this SRF. </em> <a href="#a6"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00238.htm">SRM_Valid_Region_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a7">getValidRegion</a> (int component)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Valid Region for this SRF. </em> <a href="#a7"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00221.htm">SRM_Extended_Valid_Region_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a8">getExtendedValidRegion</a> (int component)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Get the Extended Valid Region for this SRF. </em> <a href="#a8"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a9">changeCoordinate3DSRFObject</a> (<a class="el" href="a00138.htm">Coord3D</a> src, <a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a> hst, <a class="el" href="a00138.htm">Coord3D</a> tgt)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a coordinate's values to this SRF using tranformation object. </em> <a href="#a9"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a10">changeCoordinate3DArraySRFObject</a> (<a class="el" href="a00138.htm">Coord3D</a>[] src, <a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a> hst, <a class="el" href="a00138.htm">Coord3D</a>[] tgt, <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>[] region)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of coordinates to this SRF using tranformation object. </em> <a href="#a10"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00174.htm">Direction</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a11">createDirection</a> (<a class="el" href="a00138.htm">Coord3D</a> ref_coord, double vec[])  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a direction object. </em> <a href="#a11"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00174.htm">Direction</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a12">createDirection</a> ()  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a direction object with reference location and vector components as Double.NaN. </em> <a href="#a12"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a13">getDirectionValues</a> (<a class="el" href="a00174.htm">Direction</a> direction, <a class="el" href="a00138.htm">Coord3D</a> ref_coord, double vec[])  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves the direction component values. </em> <a href="#a13"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a14">changeDirectionSRF</a> (<a class="el" href="a00174.htm">Direction</a> src_dir, <a class="el" href="a00174.htm">Direction</a> tgt_dir)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's reference coordinate and vector to this SRF. </em> <a href="#a14"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a15">changeDirectionArraySRF</a> (<a class="el" href="a00174.htm">Direction</a>[] src_dir, <a class="el" href="a00174.htm">Direction</a>[] tgt_dir, <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>[] region)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of directions to this SRF. </em> <a href="#a15"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a16">changeDirectionSRFObject</a> (<a class="el" href="a00174.htm">Direction</a> src_dir, <a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a> hst, <a class="el" href="a00174.htm">Direction</a> tgt_dir)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes a direction's values to this SRF using tranformation object. </em> <a href="#a16"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>int&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a17">changeDirectionArraySRFObject</a> (<a class="el" href="a00174.htm">Direction</a>[] src_dir, <a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a> hst, <a class="el" href="a00174.htm">Direction</a>[] tgt_dir, <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>[] region)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes an array of directions to this SRF using tranformation object. </em> <a href="#a17"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a18">checkDirection</a> (<a class="el" href="a00174.htm">Direction</a> direction)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Check a direction in this SRF. </em> <a href="#a18"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a19">computeSRFOrientation</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_point, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_point, <a class="el" href="a00176.htm">Orientation</a> out_ori)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This method creates an <a class="el" href="a00176.htm">Orientation</a> object representing the orientation of the source srf (at the source reference point) with respect to this (the target) srf (at the target reference point). </em> <a href="#a19"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00193.htm">SRF_LCE_3D_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a20">getLocalTangentFrameSRFParameters</a> (<a class="el" href="a00138.htm">Coord3D</a> ref_point)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Computes the parameters corresponding to the local tangent frame at the input reference coordinate. </em> <a href="#a20"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a21">transformOrientation</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, <a class="el" href="a00176.htm">Orientation</a> src_ori, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, <a class="el" href="a00176.htm">Orientation</a> tgt_ori)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given an orientation with respect to a local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the orientation with respect to the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a21"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a22">transformOrientationCommonOrigin</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, <a class="el" href="a00176.htm">Orientation</a> src_ori, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, <a class="el" href="a00176.htm">Orientation</a> tgt_ori)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given an orientation with respect to a local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the orientation with respect to the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a22"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a23">transformVectorInBodyFrame</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, <a class="el" href="a00176.htm">Orientation</a> src_ori, double[] src_vec, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, double[] tgt_vec)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given a vector in a body frame (or in general any linear reference frame) whose orientation with respect to the local tangent frame (LTF_S) that is associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a23"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a24">transformVectorInBodyFrameCommonOrigin</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, <a class="el" href="a00176.htm">Orientation</a> src_ori, double[] src_vec, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, double[] tgt_vec)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given a vector in a body frame (or in general any linear reference frame) whose orientation with respect to the local tangent frame (LTF_S) that is associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a24"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a25">transformVector</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, double[] src_vec, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, double[] tgt_vec)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given a vector in the local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a25"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a26">transformVectorCommonOrigin</a> (<a class="el" href="a00138.htm">Coord3D</a> src_ref_loc, double[] src_vec, <a class="el" href="a00138.htm">Coord3D</a> tgt_ref_loc, double[] tgt_vec)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Given a vector in the local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. </em> <a href="#a26"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00201.htm">SRF_LococentricEuclidean3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a27">createLococentricEuclidean3DSRF</a> (<a class="el" href="a00138.htm">Coord3D</a> lococentre, <a class="el" href="a00174.htm">Direction</a> primary_axis, <a class="el" href="a00174.htm">Direction</a> secondary_axis)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">creates a Loccentric Euclidean 3D SRF whose origin in at the input lococentre and the primary and secodary axes are aligned with the input direction axes. </em> <a href="#a27"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00230.htm">SRM_SRFSM_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a28">getNaturalSRFSetMemberCode</a> (<a class="el" href="a00138.htm">Coord3D</a> src_coord, SRM_ORM_Code orm_dst, SRM_RT_Code rt_dst, <a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a> tgt_srfs)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Computes the natural SRF Set member code (region) where the 3D coordinate is located in the target SRF Set. </em> <a href="#a28"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00128.htm">BaseSRF_3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#a29">getNaturalSRFSetMember</a> (<a class="el" href="a00138.htm">Coord3D</a> src_coord, SRM_ORM_Code orm_dst, SRM_RT_Code rt_dst, <a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a> tgt_srfs)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the natural SRF Set member instance that the 3D coordinate is located in the target SRF Set. </em> <a href="#a29"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#e0">calculateEuclideanDistance</a> (<a class="el" href="a00138.htm">Coord3D</a> coord1, <a class="el" href="a00138.htm">Coord3D</a> coord2)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the euclidean distance between two coordinates. </em> <a href="#e0"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b0" doxytag="SRM::BaseSRF_3D::getMemberCode"></a>
<a class="el" href="a00230.htm">SRM_SRFSM_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>getMemberCode</b> (double[] src_coord, SRM_ORM_Code orm_dst, SRM_RT_Code rt_dst, <a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a> tgt_srfs)  throws SrmException     </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b1" doxytag="SRM::BaseSRF_3D::compLTP"></a>
LTP_vec&nbsp;</td><td class="memItemRight" valign=bottom><b>compLTP</b> (<a class="el" href="a00126.htm">BaseSRF</a> srf, <a class="el" href="a00138.htm">Coord3D</a> coord)  throws SrmException     </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b2" doxytag="SRM::BaseSRF_3D::comp_ori_mat"></a>
<a class="el" href="a00222.htm">SRM_Matrix_3x3</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>comp_ori_mat</b> (LTP_vec src, LTP_vec tgt)</td></tr>

<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00221.htm">SRM_Extended_Valid_Region_Params</a>[]&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#p0">_component_valid_region</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">member data for the geodetic valid region </em> <a href="#p0"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="p1" doxytag="SRM::BaseSRF_3D::_component_is_angular"></a>
boolean[]&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00128.htm#p1">_component_is_angular</a> = { false, false, false }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">boolean flag indicating whether the coordinate component associated with this SRF is angular <br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00128.htm">BaseSRF_3D</a> abstract class is the base class for the 3D SRFs. 
<p>
<dl compact><dt><b>Author:</b></dt><dd>David Shen </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00126.htm">BaseSRF</a>, <a class="el" href="a00127.htm">BaseSRF_2D</a> </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a name="e0" doxytag="SRM::BaseSRF_3D::calculateEuclideanDistance"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.calculateEuclideanDistance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     <code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the euclidean distance between two coordinates. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord1</em>&nbsp;</td><td>in: a coordinate in some SRF </td></tr>
    <tr><td valign=top><em>coord2</em>&nbsp;</td><td>in: a coordinate in some SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the Euclidean distance between the two <a class="el" href="a00138.htm">Coord3D</a> coordinates (in meters). </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinates do not need to be from the same SRF. <p>
This method will make (and cache) internal conversions when the inputs coordinates are from SRFs other than <a class="el" href="a00182.htm">SRF_Celestiocentric</a>. </dd></dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="SRM::BaseSRF_3D::changeCoordinate3DArraySRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeCoordinate3DArraySRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>region</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of 3D coordinate to this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>all the arrays must be of same length. <p>
all the coordinate in an array must be associated with the same SRF. <p>
the returned integer value will be the length of the array plus one to indicate that the operation successfully converted all the coordinates in the source array. Otherwise, the return value is the index of the offending coordinate in the source array. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src</em>&nbsp;</td><td>in: the array of source 3D coordinate in some other 3D SRF </td></tr>
    <tr><td valign=top><em>tgt</em>&nbsp;</td><td>out: the array of target coordinate in this 3D SRF </td></tr>
    <tr><td valign=top><em>region</em>&nbsp;</td><td>out: the array of valid region associated with the array of target coordinates </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the index of the offending coordinate in the source array when an error condition occurs. Otherwise, it is the size of the source array plus one. </dd></dl>
    </td>
  </tr>
</table>
<a name="a10" doxytag="SRM::BaseSRF_3D::changeCoordinate3DArraySRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeCoordinate3DArraySRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>region</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of coordinates to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The tgt coordinates in the tgt array must have been created using this SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range (-2_PI, 2_PI). <p>
The value of delta_s for hst must be stricly greater than -1.0. <p>
all the arrays must be of same length. <p>
all the coordinate in an array must be associated with the same SRF. <p>
the returned integer value will be the length of the array plus one to indicate that the operation successfully converted all the ccordinates in the source array. Otherwise, the return value is the index of the offending coordinate in the source array. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src</em>&nbsp;</td><td>in: the array of source coordinates in some other 3D SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation object </td></tr>
    <tr><td valign=top><em>tgt</em>&nbsp;</td><td>out: the array of target coordinates in this 3D SRF </td></tr>
    <tr><td valign=top><em>region</em>&nbsp;</td><td>out: the array of valid region associated with the array of target coordinates </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the index of the offending coordinate in the source array when an error condition occurs. Otherwise, it is the size of the source array plus one. </dd></dl>
    </td>
  </tr>
</table>
<a name="a3" doxytag="SRM::BaseSRF_3D::changeCoordinate3DSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeCoordinate3DSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a coordinate's values to this SRF. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src</em>&nbsp;</td><td>in: the source 3D coordinate in some other 3D SRF </td></tr>
    <tr><td valign=top><em>tgt</em>&nbsp;</td><td>in out: the target coordinate in this 3D SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the Valid Region of the target coordinate </dd></dl>
    </td>
  </tr>
</table>
<a name="a9" doxytag="SRM::BaseSRF_3D::changeCoordinate3DSRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeCoordinate3DSRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a coordinate's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The tgt coordinate must have been created using this SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range (-2_PI, 2_PI). <p>
The value of delta_s for hst must be stricly greater than -1.0. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src</em>&nbsp;</td><td>in: the source coordinate in some other 3D SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>tgt</em>&nbsp;</td><td>in out: the target coordinate in this 3D SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the Valid Region of the target coordinate </dd></dl>
    </td>
  </tr>
</table>
<a name="a15" doxytag="SRM::BaseSRF_3D::changeDirectionArraySRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeDirectionArraySRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_dir</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>region</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of directions to this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>all the arrays must be of same length. <p>
all the directions in an array must be associated with the same SRF. <p>
the returned integer value will be the length of the array plus one to indicate that the operation successfully converted all the directions in the source array. Otherwise, the return value is the index of the offending direction in the source array. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the array of source direction in some other 3D SRF </td></tr>
    <tr><td valign=top><em>tgt_dir</em>&nbsp;</td><td>out: the array of target direction in this 3D SRF </td></tr>
    <tr><td valign=top><em>region</em>&nbsp;</td><td>out: the array of valid region associated with the array of target direction </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the index of the offending direction in the source array when an error condition occurs. Otherwise, it is the size of the source array plus one. </dd></dl>
    </td>
  </tr>
</table>
<a name="a17" doxytag="SRM::BaseSRF_3D::changeDirectionArraySRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> int SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeDirectionArraySRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_dir</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>region</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes an array of directions to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>all the arrays must be of same length. <p>
all the directions in an array must be associated with the same SRF. <p>
the returned integer value will be the length of the array plus one to indicate that the operation successfully converted all the directions in the source array. Otherwise, the return value is the index of the offending direction in the source array. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range (-2_PI, 2_PI). <p>
The value of delta_s for hst must be stricly greater than -1.0. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the array of source direction in some other 3D SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>tgt_dir</em>&nbsp;</td><td>out: the array of target direction in this 3D SRF </td></tr>
    <tr><td valign=top><em>region</em>&nbsp;</td><td>out: the array of valid region associated with the array of target direction </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the index of the offending direction in the source array when an error condition occurs. Otherwise, it is the size of the source array plus one. </dd></dl>
    </td>
  </tr>
</table>
<a name="a14" doxytag="SRM::BaseSRF_3D::changeDirectionSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeDirectionSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_dir</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's reference coordinate and vector to this SRF. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the source direction in some other SRF </td></tr>
    <tr><td valign=top><em>tgt_dir</em>&nbsp;</td><td>out: the target direction in this SRF </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a16" doxytag="SRM::BaseSRF_3D::changeDirectionSRFObject"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.changeDirectionSRFObject </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_dir</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00225.htm">SRM_ORM_Trans_3D_Params</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>hst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_dir</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Changes a direction's values to this SRF using tranformation object. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The tgt direction must have been created using this SRF. <p>
The value of omega_1, omega_2 and omega_3 for hst must be within the range (-2_PI, 2_PI). <p>
The value of delta_s for hst must be stricly greater than -1.0. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_dir</em>&nbsp;</td><td>in: the source direction in some other SRF </td></tr>
    <tr><td valign=top><em>hst</em>&nbsp;</td><td>in: the ORM 3D transformation </td></tr>
    <tr><td valign=top><em>tgt_dir</em>&nbsp;</td><td>out: the target direction in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the reference location associated with the target direction </dd></dl>
    </td>
  </tr>
</table>
<a name="a18" doxytag="SRM::BaseSRF_3D::checkDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.checkDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>direction</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Check a direction in this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input direction object must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>direction</em>&nbsp;</td><td>in: the direction in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the coordinate valid region code in the direction's SRF </dd></dl>
    </td>
  </tr>
</table>
<a name="a19" doxytag="SRM::BaseSRF_3D::computeSRFOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.computeSRFOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_point</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_point</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>out_ori</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
This method creates an <a class="el" href="a00176.htm">Orientation</a> object representing the orientation of the source srf (at the source reference point) with respect to this (the target) srf (at the target reference point). 
<p>
The <a class="el" href="a00176.htm">Orientation</a> is computed as the cosine matrix of the source local tangent frame with respect to the target local tangent frame. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_point</em>&nbsp;</td><td>in : the source reference point </td></tr>
    <tr><td valign=top><em>tgt_ref_point</em>&nbsp;</td><td>in : the target reference point in this SRF </td></tr>
    <tr><td valign=top><em>out_ori</em>&nbsp;</td><td>out : the resulting orientation </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a1" doxytag="SRM::BaseSRF_3D::createCoordinate3D"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00138.htm">Coord3D</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.createCoordinate3D </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_comp3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a 3D coordinate object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord_comp1</em>&nbsp;</td><td>in: the values of the first component of the 3D coordinate </td></tr>
    <tr><td valign=top><em>coord_comp2</em>&nbsp;</td><td>in: the values of the second component of the 3D coordinate </td></tr>
    <tr><td valign=top><em>coord_comp3</em>&nbsp;</td><td>in: the values of the third component of the 3D coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a 3D coordinate object </dd></dl>

<p>
Implemented in <a class="el" href="a00182.htm#a2">SRM.SRF_Celestiocentric</a>, <a class="el" href="a00183.htm#a2">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00184.htm#a2">SRM.SRF_Celestiomagnetic</a>, <a class="el" href="a00186.htm#a2">SRM.SRF_EquatorialInertial</a>, <a class="el" href="a00187.htm#a3">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00188.htm#a2">SRM.SRF_HeliosphericAriesEcliptic</a>, <a class="el" href="a00189.htm#a2">SRM.SRF_HeliosphericEarthEcliptic</a>, <a class="el" href="a00190.htm#a2">SRM.SRF_HeliosphericEarthEquatorial</a>, <a class="el" href="a00191.htm#a3">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00197.htm#a3">SRM.SRF_LocalSpaceRectangular3D</a>, <a class="el" href="a00198.htm#a3">SRM.SRF_LocalTangentSpaceAzimuthalSpherical</a>, <a class="el" href="a00199.htm#a3">SRM.SRF_LocalTangentSpaceCylindrical</a>, <a class="el" href="a00200.htm#a3">SRM.SRF_LocalTangentSpaceEuclidean</a>, <a class="el" href="a00201.htm#a3">SRM.SRF_LococentricEuclidean3D</a>, <a class="el" href="a00207.htm#a3">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a3">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a2">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a3">SRM.SRF_PolarStereographic</a>, <a class="el" href="a00213.htm#a2">SRM.SRF_SolarEcliptic</a>, <a class="el" href="a00214.htm#a2">SRM.SRF_SolarEquatorial</a>, <a class="el" href="a00215.htm#a2">SRM.SRF_SolarMagneticDipole</a>, <a class="el" href="a00216.htm#a2">SRM.SRF_SolarMagneticEcliptic</a>, and <a class="el" href="a00218.htm#a3">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a0" doxytag="SRM::BaseSRF_3D::createCoordinate3D"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00138.htm">Coord3D</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.createCoordinate3D </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a 3D coordinate object. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a 3D coordinate object </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The initial coordinate value is defaulted to [ Double.NaN, Double.NaN, Double.NaN ]. </dd></dl>

<p>
Implemented in <a class="el" href="a00182.htm#a1">SRM.SRF_Celestiocentric</a>, <a class="el" href="a00183.htm#a1">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00184.htm#a1">SRM.SRF_Celestiomagnetic</a>, <a class="el" href="a00186.htm#a1">SRM.SRF_EquatorialInertial</a>, <a class="el" href="a00187.htm#a2">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00188.htm#a1">SRM.SRF_HeliosphericAriesEcliptic</a>, <a class="el" href="a00189.htm#a1">SRM.SRF_HeliosphericEarthEcliptic</a>, <a class="el" href="a00190.htm#a1">SRM.SRF_HeliosphericEarthEquatorial</a>, <a class="el" href="a00191.htm#a2">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00197.htm#a2">SRM.SRF_LocalSpaceRectangular3D</a>, <a class="el" href="a00198.htm#a2">SRM.SRF_LocalTangentSpaceAzimuthalSpherical</a>, <a class="el" href="a00199.htm#a2">SRM.SRF_LocalTangentSpaceCylindrical</a>, <a class="el" href="a00200.htm#a2">SRM.SRF_LocalTangentSpaceEuclidean</a>, <a class="el" href="a00201.htm#a2">SRM.SRF_LococentricEuclidean3D</a>, <a class="el" href="a00207.htm#a2">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a2">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a1">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a2">SRM.SRF_PolarStereographic</a>, <a class="el" href="a00213.htm#a1">SRM.SRF_SolarEcliptic</a>, <a class="el" href="a00214.htm#a1">SRM.SRF_SolarEquatorial</a>, <a class="el" href="a00215.htm#a1">SRM.SRF_SolarMagneticDipole</a>, <a class="el" href="a00216.htm#a1">SRM.SRF_SolarMagneticEcliptic</a>, and <a class="el" href="a00218.htm#a2">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a12" doxytag="SRM::BaseSRF_3D::createDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00174.htm">Direction</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.createDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a direction object with reference location and vector components as Double.NaN. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a direction object </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>This method is mainly intended for facilitating the creation of <a class="el" href="a00174.htm">Direction</a> objects that will be used as the target <a class="el" href="a00174.htm">Direction</a> for the <a class="el" href="a00128.htm#a14">changeDirectionSRF()</a> method. </dd></dl>
    </td>
  </tr>
</table>
<a name="a11" doxytag="SRM::BaseSRF_3D::createDirection"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00174.htm">Direction</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.createDirection </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a direction object. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>ref_coord</em>&nbsp;</td><td>in: the 3D reference coordinate in this SRF. </td></tr>
    <tr><td valign=top><em>vec[]</em>&nbsp;</td><td>in: the array of size 3 containing the vector component values. It can be changed after the direction is created. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a direction object </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input reference coordinate must have been created using this SRF. <p>
The reference coordinate cannot be changed after the direction is instantiated.</dd></dl>
A sample code to instantiate a <a class="el" href="a00174.htm">Direction</a> object is as follows: <div class="fragment"><pre>        <span class="keyword">import</span> SRM.*;
        ...

        <span class="keywordflow">try</span> {

        <span class="comment">// first instantiate an SRF, say CD_3D SRF in WGS 1984</span>
        SRF_Celestiodetic CdSrf = <span class="keyword">new</span> SRF_Celestiodetic(SRM_ORM_Code.ORM_WGS_1984,
        SRM_RT_Code.RT_WGS_1984_IDENTITY);

        <span class="comment">// then instantiate a 3D CD_3D coordinate as the reference coordinate</span>
        Coord3D_Celestiodetic CdCoord =
        (Coord3D_Celestiodetic)CdSrf.createCoordinate3D(Math.toRadians(10.0),
        Math.toRadians(20.0),
        100.0);

        <span class="comment">// then instantiate the Direction object by invoking the createDirection method</span>
        Direction dir = CdSrf.createDirection(CdCoord, { 1.0, 2.0, 3.0 });

        } <span class="keywordflow">catch</span> (SrmException ex)
        ...

        <span class="comment">// Note: The input reference coordinate is immutable.</span>
</pre></div>    </td>
  </tr>
</table>
<a name="a27" doxytag="SRM::BaseSRF_3D::createLococentricEuclidean3DSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00201.htm">SRF_LococentricEuclidean3D</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.createLococentricEuclidean3DSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>lococentre</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>primary_axis</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>secondary_axis</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
creates a Loccentric Euclidean 3D SRF whose origin in at the input lococentre and the primary and secodary axes are aligned with the input direction axes. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>lococentre</em>&nbsp;</td><td>in : the lococentre of the SRF </td></tr>
    <tr><td valign=top><em>primary_axis</em>&nbsp;</td><td>in : the direction of the primary axis </td></tr>
    <tr><td valign=top><em>secondary_axis</em>&nbsp;</td><td>in : the direction of the secondary axis </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an instance of Lococentric Euclidean 3D SRF </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws srm::Exception </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a2" doxytag="SRM::BaseSRF_3D::getCoordinate3DValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double [] SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getCoordinate3DValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the 3D coordinate component values. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord</em>&nbsp;</td><td>in: a 3D coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an array of size 3 containing the component values for the 3D coordinate </dd></dl>
    </td>
  </tr>
</table>
<a name="a13" doxytag="SRM::BaseSRF_3D::getDirectionValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getDirectionValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00174.htm">Direction</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>direction</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>ref_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves the direction component values. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>direction</em>&nbsp;</td><td>in: the direction object </td></tr>
    <tr><td valign=top><em>ref_coord</em>&nbsp;</td><td>out: the 3D reference coordinate in this SRF </td></tr>
    <tr><td valign=top><em>vec[]</em>&nbsp;</td><td>out: the 3D reference coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Note:</b></dt><dd>The input direction must have been created using this SRF. <p>
The input reference coordinate must have been created using this SRF. </dd></dl>
    </td>
  </tr>
</table>
<a name="a8" doxytag="SRM::BaseSRF_3D::getExtendedValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00221.htm">SRM_Extended_Valid_Region_Params</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getExtendedValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>component</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Extended Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the extended valid region parameters </dd></dl>
    </td>
  </tr>
</table>
<a name="a20" doxytag="SRM::BaseSRF_3D::getLocalTangentFrameSRFParameters"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00193.htm">SRF_LCE_3D_Params</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getLocalTangentFrameSRFParameters </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>ref_point</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the parameters corresponding to the local tangent frame at the input reference coordinate. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>ref_point</em>&nbsp;</td><td>in : the reference point </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the parameters for the local tangent frame, which are the parameters for the Lococentric Euclidean 3D SRF at the reference coordinate </dd></dl>
    </td>
  </tr>
</table>
<a name="a29" doxytag="SRM::BaseSRF_3D::getNaturalSRFSetMember"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00128.htm">BaseSRF_3D</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getNaturalSRFSetMember </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_ORM_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_RT_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the natural SRF Set member instance that the 3D coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source 3D coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the RT for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member instance for the destination SRF Set </dd></dl>
    </td>
  </tr>
</table>
<a name="a28" doxytag="SRM::BaseSRF_3D::getNaturalSRFSetMemberCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00230.htm">SRM_SRFSM_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getNaturalSRFSetMemberCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_ORM_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_RT_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the natural SRF Set member code (region) where the 3D coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source 3D coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the RT for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member code for the destination SRF Set </dd></dl>
    </td>
  </tr>
</table>
<a name="a7" doxytag="SRM::BaseSRF_3D::getValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00238.htm">SRM_Valid_Region_Params</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.getValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>component</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Get the Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidRegion method determines the valid and extended valid intervals of the coordinate component values. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the valid region parameters </dd></dl>
    </td>
  </tr>
</table>
<a name="a6" doxytag="SRM::BaseSRF_3D::setExtendedValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.setExtendedValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a149">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>extended_upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Extended Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setValidRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. <p>
The Extended_Lower value must be strictly greater than the Lower value and the Extended_Upper value must be strictly smaller than the Lower value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>extended_lower</em>&nbsp;</td><td>in: the extended lower value of the interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
    <tr><td valign=top><em>extended_upper</em>&nbsp;</td><td>in: the extended_upper value of the interval </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="SRM::BaseSRF_3D::setValidRegion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.setValidRegion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">int&nbsp;</td>
          <td class="mdname" nowrap> <em>component</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a149">SRM_Interval_Type</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>type</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>lower</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>upper</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Set the Valid Region for this SRF. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>Given a coordinate component, the last invocation of this method or the setExtendedValidRegion method determines the valid and extended valid intervals of the coordinate component values. <p>
Upper or Lower value is ignored if the interval is a semi-interval or unbounded. <p>
The Lower value must be strictly less than the Upper value. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>component</em>&nbsp;</td><td>in: the coordinate component (1, 2, or 3) </td></tr>
    <tr><td valign=top><em>type</em>&nbsp;</td><td>in: the type of interval </td></tr>
    <tr><td valign=top><em>lower</em>&nbsp;</td><td>in: the lower value of the interval </td></tr>
    <tr><td valign=top><em>upper</em>&nbsp;</td><td>in: the upper value of the interval </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a21" doxytag="SRM::BaseSRF_3D::transformOrientation"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformOrientation </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ori</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ori</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given an orientation with respect to a local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the orientation with respect to the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
The output orientation is computed by composing the orientation of LTF_S with respect to LTF_T with the input source orientation. The SRF invoking this method is the target SRF. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_ori</em>&nbsp;</td><td>in : the source orientation of some linear reference frame with respect to LTF_S </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>in : the target reference location (a coordinate in this SRF, the target SRF) where the origin of the target local tangent frame (LTF_T) is located </td></tr>
    <tr><td valign=top><em>tgt_ori</em>&nbsp;</td><td>out : the target orientation with respect to LTF_T </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a22" doxytag="SRM::BaseSRF_3D::transformOrientationCommonOrigin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformOrientationCommonOrigin </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ori</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ori</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given an orientation with respect to a local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the orientation with respect to the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
LTF_S and LTF_T have a common origin. The output orientation is computed by composing the orientation of LTF_S with respect to LTF_T with the input source orientation. The SRF invoking this method is the target SRF. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_ori</em>&nbsp;</td><td>in : the source orientation of some linear reference frame with respect to LTF_S </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>out : the coordinate of the common reference location in the target SRF </td></tr>
    <tr><td valign=top><em>tgt_ori</em>&nbsp;</td><td>out : the target orientation with respect to LTF_T </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the target reference location </dd></dl>
    </td>
  </tr>
</table>
<a name="a25" doxytag="SRM::BaseSRF_3D::transformVector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformVector </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>src_vec</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given a vector in the local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
The output vector is computed by applying the orientation of LTF_S with respect to LTF_T to the source vector. The SRF invoking this method is the target SRF. <dl compact><dt><b>Note:</b></dt><dd>The input/output arrays are of size 3. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_vec</em>&nbsp;</td><td>in : the source vector in LTF_S </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>in : the target reference location (a coordinate in this SRF, the target SRF) where the origin of the target local tangent frame (LTF_T) is located </td></tr>
    <tr><td valign=top><em>tgt_vec</em>&nbsp;</td><td>out : the target vector in LTF_T </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a26" doxytag="SRM::BaseSRF_3D::transformVectorCommonOrigin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformVectorCommonOrigin </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>src_vec</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given a vector in the local tangent frame (LTF_S) associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
LTF_S and LTF_T have a common origin. The output vector is computed by applying the orientation of LTF_S with respect to LTF_T to the source vector. The SRF invoking this method is the target SRF. <dl compact><dt><b>Note:</b></dt><dd>The input/output arrays are of size 3. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_vec</em>&nbsp;</td><td>in : the source vector in LTF_S </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>out : coordinate of the common reference location in the target SRF </td></tr>
    <tr><td valign=top><em>tgt_vec</em>&nbsp;</td><td>out : the target vector in LTF_T </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the target reference location </dd></dl>
    </td>
  </tr>
</table>
<a name="a23" doxytag="SRM::BaseSRF_3D::transformVectorInBodyFrame"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformVectorInBodyFrame </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ori</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>src_vec</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given a vector in a body frame (or in general any linear reference frame) whose orientation with respect to the local tangent frame (LTF_S) that is associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
The output vector is computed by applying the composed orientation, from the orientation of LTF_S with respect to LTF_T with the source orientation, to the source vector. This method is equivalent to applying the orientation result from the transformOrientation method to the source vector. The SRF invoking this method is the target SRF. <dl compact><dt><b>Note:</b></dt><dd>The input/output arrays are of size 3. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_ori</em>&nbsp;</td><td>in : the source orientation of some linear reference frame L with respect to LTF_S </td></tr>
    <tr><td valign=top><em>src_vec</em>&nbsp;</td><td>in : the input vector in L </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>in : the target reference location (a coordinate in this SRF, the target SRF) where the origin of the target local tangent frame (LTF_T) is located </td></tr>
    <tr><td valign=top><em>tgt_vec</em>&nbsp;</td><td>out : the target vector in LTF_T </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a24" doxytag="SRM::BaseSRF_3D::transformVectorInBodyFrameCommonOrigin"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00367.htm#a146">SRM_Coordinate_Valid_Region_Code</a> SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.transformVectorInBodyFrameCommonOrigin </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_ori</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>src_vec</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_ref_loc</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_vec</em>[]</td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Given a vector in a body frame (or in general any linear reference frame) whose orientation with respect to the local tangent frame (LTF_S) that is associated with a reference location in the source SRF, this method computes the vector in the local tangent frame (LTF_T) associated with the specified reference location in the target SRF. 
<p>
LTF_S and LTF_T have a common origin. The output vector is computed by applying the composed orientation, from the orientation of LTF_S with respect to LTF_T with the source orientation, to the source vector. This method is equivalent to applying the orientation result from the transformOrientation method to the source vector. The SRF invoking this method is the target SRF. <dl compact><dt><b>Note:</b></dt><dd>The input/output arrays are of size 3. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_ref_loc</em>&nbsp;</td><td>in : the source reference location (a coordinate in the source SRF) where the origin of the source local tangent frame (LTF_S) is located </td></tr>
    <tr><td valign=top><em>src_ori</em>&nbsp;</td><td>in : the source orientation of some linear reference frame L with respect to LTF_S </td></tr>
    <tr><td valign=top><em>src_vec</em>&nbsp;</td><td>in : the input vector in L </td></tr>
    <tr><td valign=top><em>tgt_ref_loc</em>&nbsp;</td><td>out : the coordinate of the common reference location in the target SRF </td></tr>
    <tr><td valign=top><em>tgt_vec</em>&nbsp;</td><td>out : the target vector in LTF_T </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>valid region category for the target reference location </dd></dl>
    </td>
  </tr>
</table>
<hr><h2>Member Data Documentation</h2>
<a name="p0" doxytag="SRM::BaseSRF_3D::_component_valid_region"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00221.htm">SRM_Extended_Valid_Region_Params</a> [] SRM.<a class="el" href="a00128.htm">BaseSRF_3D</a>.<a class="el" href="a00128.htm#p0">_component_valid_region</a><code> [protected]</code>
      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
<b>Initial value:</b><div class="fragment"><pre>
        <span class="keyword">new</span> SRM_Extended_Valid_Region_Params[3]
</pre></div>member data for the geodetic valid region 
<p>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>BaseSRF_3D.java</ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model Java API</strong></td>
<td align="right"><strong>
Version 4.4.0 - January 21, 2010
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
