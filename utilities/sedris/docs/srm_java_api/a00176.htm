<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model Java API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.htm">Packages</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="namespacemembers.htm">Namespace&nbsp;Members</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="pages.htm">Related&nbsp;Pages</a></div>
<h1>SRM.Orientation Class Reference</h1>The <a class="el" href="a00176.htm">Orientation</a> base class.  
<a href="#_details">More...</a>
<p>
Inheritance diagram for SRM.Orientation:<p><center><img src="a00461.png" border="0" usemap="#a00462" alt="Inheritance graph"></center>
<map name="a00462">
<area href="a00177.htm" shape="rect" coords="195,5,376,32" alt="">
<area href="a00178.htm" shape="rect" coords="176,56,395,83" alt="">
<area href="a00179.htm" shape="rect" coords="207,107,364,133" alt="">
<area href="a00180.htm" shape="rect" coords="192,157,379,184" alt="">
<area href="a00181.htm" shape="rect" coords="176,208,395,235" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00050.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a0" doxytag="SRM::Orientation::getMatrix3x3"></a>
<a class="el" href="a00222.htm">SRM_Matrix_3x3</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a0">getMatrix3x3</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the orientation in matrix 3x3 representation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a1" doxytag="SRM::Orientation::getAxisAngle"></a>
<a class="el" href="a00219.htm">SRM_Axis_Angle_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a1">getAxisAngle</a> ()  throws SrmException      </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the orientation in (axis, angle) representation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a2" doxytag="SRM::Orientation::getEulerAnglesZXZ"></a>
<a class="el" href="a00220.htm">SRM_Euler_Angles_ZXZ_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a2">getEulerAnglesZXZ</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the orientation in Euler angles (ZXZ) representation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a3" doxytag="SRM::Orientation::getTaitBryanAngles"></a>
<a class="el" href="a00237.htm">SRM_Tait_Bryan_Angles_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a3">getTaitBryanAngles</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the orientation in Tait-Bryan angles representation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a4" doxytag="SRM::Orientation::getQuaternion"></a>
<a class="el" href="a00227.htm">SRM_Quaternion_Params</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a4">getQuaternion</a> ()  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets the orientation in Quaternion representation. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a5">setMatrix3x3</a> (<a class="el" href="a00222.htm">SRM_Matrix_3x3</a> params)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the Matrix 3x3 orientation representation. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a6">setMatrix3x3</a> (double a11, double a12, double a13, double a21, double a22, double a23, double a31, double a32, double a33)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the orientation using elements of the matrix (mat) 3x3 parameter. </em> <a href="#a6"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a7">setAxisAngle</a> (<a class="el" href="a00219.htm">SRM_Axis_Angle_Params</a> params)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the (axis, angle) orientation representation. </em> <a href="#a7"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a8">setAxisAngle</a> (double[] axis, double angle_in_rad)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the orientation using (axis, angle) parameters. </em> <a href="#a8"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a9">setEulerAnglesZXZ</a> (<a class="el" href="a00220.htm">SRM_Euler_Angles_ZXZ_Params</a> params)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the Euler angles (ZXZ) orientation representation. </em> <a href="#a9"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a10">setEulerAnglesZXZ</a> (double spin, double nutation, double precession)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the orientation using spin, nutation, and precession parameters. </em> <a href="#a10"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a11">setTaitBryanAngles</a> (<a class="el" href="a00237.htm">SRM_Tait_Bryan_Angles_Params</a> params)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the Tait-Bryan angles orientation representation. </em> <a href="#a11"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a12">setTaitBryanAngles</a> (double roll, double pitch, double yaw)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the orientation using roll, pitch and yaw parameters. </em> <a href="#a12"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a13">setQuaternion</a> (<a class="el" href="a00227.htm">SRM_Quaternion_Params</a> params)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the quaternion orientation representation. </em> <a href="#a13"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a14">setQuaternion</a> (double e0, double e1, double e2, double e3)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets the orientation using quaternion (e0, e1, e2, e3 ) parameters. </em> <a href="#a14"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a15" doxytag="SRM::Orientation::toString"></a>
abstract String&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a15">toString</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the string for the orientation values. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="a16" doxytag="SRM::Orientation::getOriRep"></a>
abstract <a class="el" href="a00367.htm#a150">SRM_Ori_Rep</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a16">getOriRep</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the native orientation representation type. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double[]&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a17">transformVector</a> (double[] vec)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Applies this orientation to the input vector and sets the result in the return vector. </em> <a href="#a17"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>boolean&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#a18">isEqual</a> (<a class="el" href="a00176.htm">Orientation</a> ori)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">The equality operator. </em> <a href="#a18"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="e0" doxytag="SRM::Orientation::equivalence"></a>
final boolean&nbsp;</td><td class="memItemRight" valign=bottom><b>equivalence</b> (<a class="el" href="a00176.htm">Orientation</a> instance1, <a class="el" href="a00176.htm">Orientation</a> instance2, double tolerance)  throws SrmException     </td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="e1" doxytag="SRM::Orientation::equivalence"></a>
final boolean&nbsp;</td><td class="memItemRight" valign=bottom><b>equivalence</b> (<a class="el" href="a00176.htm">Orientation</a> instance1, <a class="el" href="a00176.htm">Orientation</a> instance2)</td></tr>

<tr><td colspan=2><br><h2>Static Public Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="s0" doxytag="SRM::Orientation::epsilon"></a>
final double&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#s0">epsilon</a> = Const.EPSILON</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Epsilon value for equivalence tests. <br><br></td></tr>
<tr><td colspan=2><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b0" doxytag="SRM::Orientation::_get_matrix_base"></a>
<a class="el" href="a00222.htm">SRM_Matrix_3x3</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#b0">_get_matrix_base</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Internal matrix 3x3 representation (for now) used for calculations. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b1" doxytag="SRM::Orientation::_get_matrix_base_unch"></a>
<a class="el" href="a00222.htm">SRM_Matrix_3x3</a>&nbsp;</td><td class="memItemRight" valign=bottom><b>_get_matrix_base_unch</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b2" doxytag="SRM::Orientation::_set_matrix_base"></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>_set_matrix_base</b> (<a class="el" href="a00222.htm">SRM_Matrix_3x3</a> mat)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b3" doxytag="SRM::Orientation::_get_internal_data_is_current"></a>
boolean&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#b3">_get_internal_data_is_current</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">is set to true when the internal data is equivalent to the representation class data. <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b4" doxytag="SRM::Orientation::_set_internal_data_is_current"></a>
void&nbsp;</td><td class="memItemRight" valign=bottom><b>_set_internal_data_is_current</b> (boolean internal_data_is_current)</td></tr>

<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b5" doxytag="SRM::Orientation::_updateIntData"></a>
abstract void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#b5">_updateIntData</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">the virtual function to convert the data from native representation to the internal representation <br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a name="b6" doxytag="SRM::Orientation::_updateRepData"></a>
abstract void&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00176.htm#b6">_updateRepData</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">the virtual function to convert the data from internal representation to the native representation <br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00176.htm">Orientation</a> base class. 
<p>
<dl compact><dt><b>Author:</b></dt><dd>David Shen </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00128.htm">BaseSRF_3D</a> </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a name="a18" doxytag="SRM::Orientation::isEqual"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> boolean SRM.<a class="el" href="a00176.htm">Orientation</a>.isEqual </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00176.htm">Orientation</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>ori</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
The equality operator. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>This operator is deprecated. Use equivalence() method. </dd></dl>
    </td>
  </tr>
</table>
<a name="a8" doxytag="SRM::Orientation::setAxisAngle"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setAxisAngle </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>axis</em>[], </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>angle_in_rad</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the orientation using (axis, angle) parameters. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>axis</em>&nbsp;</td><td>in: the axis of rotation, which is a unit vector </td></tr>
    <tr><td valign=top><em>angle</em>&nbsp;</td><td>in: the angle of rotation, which is in radians in the range of [-2PI, 2PI] </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a7" doxytag="SRM::Orientation::setAxisAngle"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setAxisAngle </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00219.htm">SRM_Axis_Angle_Params</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>params</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the (axis, angle) orientation representation. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>the input axis is a unit vector <p>
the input angle is in radians in the range of [-2PI, 2PI] </dd></dl>

<p>
Reimplemented in <a class="el" href="a00177.htm#a4">SRM.OrientationAxisAngle</a>.    </td>
  </tr>
</table>
<a name="a10" doxytag="SRM::Orientation::setEulerAnglesZXZ"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setEulerAnglesZXZ </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>spin</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>nutation</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>precession</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the orientation using spin, nutation, and precession parameters. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>spin</em>&nbsp;</td><td>in: the spin angle, which is in radians in the range of [-2PI, 2PI] </td></tr>
    <tr><td valign=top><em>nutation</em>&nbsp;</td><td>in: the nutation angle is in radians in the range of [-2PI, 2PI] </td></tr>
    <tr><td valign=top><em>precession</em>&nbsp;</td><td>in: the precession angle, which is in radians in the range of [-2PI, 2PI] </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a9" doxytag="SRM::Orientation::setEulerAnglesZXZ"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setEulerAnglesZXZ </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00220.htm">SRM_Euler_Angles_ZXZ_Params</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>params</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the Euler angles (ZXZ) orientation representation. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>the spin angle is in radians in the range of [-2PI, 2PI] <p>
the nutation angle is in radians in the range of [-2PI, 2PI] <p>
the precession angle is in radians in the range of [-2PI, 2PI] </dd></dl>

<p>
Reimplemented in <a class="el" href="a00178.htm#a4">SRM.OrientationEulerAnglesZXZ</a>.    </td>
  </tr>
</table>
<a name="a6" doxytag="SRM::Orientation::setMatrix3x3"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setMatrix3x3 </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>a11</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a12</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a13</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a21</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a22</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a23</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a31</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a32</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>a33</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the orientation using elements of the matrix (mat) 3x3 parameter. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>the INV(mat)=TRANSPOSE(mat), consequently, mat*TRANSPOSE(mat)=I </dd></dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="SRM::Orientation::setMatrix3x3"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setMatrix3x3 </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00222.htm">SRM_Matrix_3x3</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>params</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the Matrix 3x3 orientation representation. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>the INV(mat)=TRANSPOSE(mat), consequently, mat*TRANSPOSE(mat)=I </dd></dl>

<p>
Reimplemented in <a class="el" href="a00179.htm#a4">SRM.OrientationMatrix</a>.    </td>
  </tr>
</table>
<a name="a14" doxytag="SRM::Orientation::setQuaternion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setQuaternion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>e0</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>e1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>e2</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>e3</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the orientation using quaternion (e0, e1, e2, e3 ) parameters. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>q = e0 + e1*i + e2*j + e3*k <p>
e0^2 + e1^2 + e2^2 + e3^2 = 1 </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>e0</em>&nbsp;</td><td>in: the scale (real) parameter </td></tr>
    <tr><td valign=top><em>e1</em>&nbsp;</td><td>in: the vector multiplier in (i) direction </td></tr>
    <tr><td valign=top><em>e2</em>&nbsp;</td><td>in: the vector multiplier in (j) direction </td></tr>
    <tr><td valign=top><em>e3</em>&nbsp;</td><td>in: the vector multiplier in (k) direction </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a13" doxytag="SRM::Orientation::setQuaternion"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setQuaternion </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00227.htm">SRM_Quaternion_Params</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>params</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the quaternion orientation representation. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>q = e0 + e1*i + e2*j + e3*k <p>
e0^2 + e1^2 + e2^2 + e3^2 = 1 </dd></dl>

<p>
Reimplemented in <a class="el" href="a00180.htm#a4">SRM.OrientationQuaternion</a>.    </td>
  </tr>
</table>
<a name="a12" doxytag="SRM::Orientation::setTaitBryanAngles"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setTaitBryanAngles </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>roll</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>pitch</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>yaw</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the orientation using roll, pitch and yaw parameters. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>roll</em>&nbsp;</td><td>in: the roll angle, which is in radians in the range of [-2PI, 2PI] </td></tr>
    <tr><td valign=top><em>pitch</em>&nbsp;</td><td>in: the pitch angle, which is in radians in the range of [-2PI, 2PI] </td></tr>
    <tr><td valign=top><em>yaw</em>&nbsp;</td><td>in: the yaw angle, which is in radians in the range of [-2PI, 2PI] </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<a name="a11" doxytag="SRM::Orientation::setTaitBryanAngles"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> void SRM.<a class="el" href="a00176.htm">Orientation</a>.setTaitBryanAngles </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00237.htm">SRM_Tait_Bryan_Angles_Params</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>params</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Sets the Tait-Bryan angles orientation representation. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>the roll angle is in radians in the range of [-2PI, 2PI] <p>
the pitch angle is in radians in the range of [-2PI, 2PI] <p>
the yaw angle is in radians in the range of [-2PI, 2PI] </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws srm::Exception </td></tr>
  </table>
</dl>

<p>
Reimplemented in <a class="el" href="a00181.htm#a4">SRM.OrientationTaitBryanAngles</a>.    </td>
  </tr>
</table>
<a name="a17" doxytag="SRM::Orientation::transformVector"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double [] SRM.<a class="el" href="a00176.htm">Orientation</a>.transformVector </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>vec</em>[]          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Applies this orientation to the input vector and sets the result in the return vector. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input/output arrays are of size 3. </dd></dl>
<dl compact><dt><b>Exceptions:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>This</em>&nbsp;</td><td>method throws srm::Exception </td></tr>
  </table>
</dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>Orientation.java</ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model Java API</strong></td>
<td align="right"><strong>
Version 4.4.0 - January 21, 2010
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
