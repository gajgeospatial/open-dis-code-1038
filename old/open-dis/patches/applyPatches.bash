#!/bin/bash
#
# Unix bash shell script to apply post-processing patches to the generated source
# code. This should be run only after source code has been newly generated by the
# XMPP utility. This should be done automatically on Unix-derived operating systems
# via the ant task. You're on your own for windows.
#
# Since this is run from the project directory (one level above this), all the
# file names used should be relative to that directory.
#
# Uses the Unix patch utility.
#
# To generate a patch file, check out the current source code from svn, then
# modify it. Run the command
# svn diff SomeFile.java > SomeFile.java.patch
# to create the patch file
#
# @author DMcG
# @version $Id:$

# Pdu.java, apply patch file
patch java/edu/nps/moves/dis/Pdu.java patches/java/Pdu.java.patch

# Marking.java, apply patch file to ensure character fields are exactly 11 bytes long after set operations
patch java/edu/nps/moves/dis/Marking.java patches/java/Marking.java.patch

# Apply patch to VariableDatum.java
patch java/edu/nps/moves/dis/VariableDatum.java patches/java/VariableDatum.java.patch

# Apply patch to EntityID to get equality, hashcode
patch java/edu/nps/moves/dis/EntityID.java patches/java/EntityID.java.patch

# Apply patch to Vector3Double to get some convienience methods for 
# converting back and forth to DIS coordinates from lat/lon/alt.
 patch java/edu/nps/moves/dis/Vector3Double.java patches/java/Vector3Double.java.patch


# Apply patches to c++ code....

# Variable datum
patch Cpp/DIS/VariableDatum.cpp patches/cpp/VariableDatum.cpp.patch
