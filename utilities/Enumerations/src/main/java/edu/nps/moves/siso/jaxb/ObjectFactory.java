//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.5-b01-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.03.13 at 10:34:00 PM PDT 
//


package edu.nps.moves.siso.jaxb;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.nps.moves.siso.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.nps.moves.siso.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RecordT }
     * 
     */
    public RecordT createRecordT() {
        return new RecordT();
    }

    /**
     * Create an instance of {@link EnumT }
     * 
     */
    public EnumT createEnumT() {
        return new EnumT();
    }

    /**
     * Create an instance of {@link EntityT }
     * 
     */
    public EntityT createEntityT() {
        return new EntityT();
    }

    /**
     * Create an instance of {@link MetaT }
     * 
     */
    public MetaT createMetaT() {
        return new MetaT();
    }

    /**
     * Create an instance of {@link EnumrowT }
     * 
     */
    public EnumrowT createEnumrowT() {
        return new EnumrowT();
    }

    /**
     * Create an instance of {@link CetT }
     * 
     */
    public CetT createCetT() {
        return new CetT();
    }

    /**
     * Create an instance of {@link ExtraT }
     * 
     */
    public ExtraT createExtraT() {
        return new ExtraT();
    }

    /**
     * Create an instance of {@link RevisionsT }
     * 
     */
    public RevisionsT createRevisionsT() {
        return new RevisionsT();
    }

    /**
     * Create an instance of {@link ObjectT }
     * 
     */
    public ObjectT createObjectT() {
        return new ObjectT();
    }

    /**
     * Create an instance of {@link BitmaskT }
     * 
     */
    public BitmaskT createBitmaskT() {
        return new BitmaskT();
    }

    /**
     * Create an instance of {@link SpecificT }
     * 
     */
    public SpecificT createSpecificT() {
        return new SpecificT();
    }

    /**
     * Create an instance of {@link CategoryT }
     * 
     */
    public CategoryT createCategoryT() {
        return new CategoryT();
    }

    /**
     * Create an instance of {@link DatatypeT }
     * 
     */
    public DatatypeT createDatatypeT() {
        return new DatatypeT();
    }

    /**
     * Create an instance of {@link GenericentryT }
     * 
     */
    public GenericentryT createGenericentryT() {
        return new GenericentryT();
    }

    /**
     * Create an instance of {@link RevisionT }
     * 
     */
    public RevisionT createRevisionT() {
        return new RevisionT();
    }

    /**
     * Create an instance of {@link SubcategoryT }
     * 
     */
    public SubcategoryT createSubcategoryT() {
        return new SubcategoryT();
    }

    /**
     * Create an instance of {@link BitmaskrowT }
     * 
     */
    public BitmaskrowT createBitmaskrowT() {
        return new BitmaskrowT();
    }

    /**
     * Create an instance of {@link ColT }
     * 
     */
    public ColT createColT() {
        return new ColT();
    }

    /**
     * Create an instance of {@link GenerictableT }
     * 
     */
    public GenerictableT createGenerictableT() {
        return new GenerictableT();
    }

    /**
     * Create an instance of {@link HeaderT }
     * 
     */
    public HeaderT createHeaderT() {
        return new HeaderT();
    }

    /**
     * Create an instance of {@link FieldT }
     * 
     */
    public FieldT createFieldT() {
        return new FieldT();
    }

    /**
     * Create an instance of {@link Ebv }
     * 
     */
    public Ebv createEbv() {
        return new Ebv();
    }

    /**
     * Create an instance of {@link AcronymT }
     * 
     */
    public AcronymT createAcronymT() {
        return new AcronymT();
    }

    /**
     * Create an instance of {@link AcronymsT }
     * 
     */
    public AcronymsT createAcronymsT() {
        return new AcronymsT();
    }

    /**
     * Create an instance of {@link CotT }
     * 
     */
    public CotT createCotT() {
        return new CotT();
    }

}
