<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>Spatial Reference Model Java API</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head>
<body bgcolor="#ffffff">
<!-- Generated by Doxygen 1.3.2 -->
<div class="qindex"><a class="qindex" href="main.htm">Main&nbsp;Page</a> | <a class="qindex" href="namespaces.htm">Packages</a> | <a class="qindex" href="hierarchy.htm">Class&nbsp;Hierarchy</a> | <a class="qindex" href="classes.htm">Alphabetical&nbsp;List</a> | <a class="qindex" href="annotated.htm">Compound&nbsp;List</a> | <a class="qindex" href="namespacemembers.htm">Namespace&nbsp;Members</a> | <a class="qindex" href="functions.htm">Compound&nbsp;Members</a> | <a class="qindex" href="pages.htm">Related&nbsp;Pages</a></div>
<h1>SRM.BaseSRF_WithEllipsoidalHeight Class Reference</h1>The <a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a> abstract class.  
<a href="#_details">More...</a>
<p>
Inheritance diagram for SRM.BaseSRF_WithEllipsoidalHeight:<p><center><img src="a00377.png" border="0" usemap="#a00378" alt="Inheritance graph"></center>
<map name="a00378">
<area href="a00130.htm" shape="rect" coords="5,155,211,182" alt="">
<area href="a00183.htm" shape="rect" coords="235,155,400,182" alt="">
<area href="a00210.htm" shape="rect" coords="424,155,587,182" alt="">
<area href="a00128.htm" shape="rect" coords="249,6,385,32" alt="">
</map>
<center><font size="2">[<a target="top" href="graph_legend.htm">legend</a>]</font></center><a href="a00006.htm">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
<tr><td></td></tr>
<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a0">createSurfaceCoordinate</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a surface coordinate object with default [ Double.NaN, Double.NaN ]. </em> <a href="#a0"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a1">createSurfaceCoordinate</a> (double coord_surf_comp1, double coord_surf_comp2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a surface coordinate object with initial values. </em> <a href="#a1"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double[]&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a2">getSurfaceCoordinateValues</a> (<a class="el" href="a00162.htm">CoordSurf</a> coord_surf)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Retrieves a coordinate surface component values. </em> <a href="#a2"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a3">getAssociatedSurfaceCoordinate</a> (<a class="el" href="a00138.htm">Coord3D</a> coord)  throws SrmException</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a surface coordinate associated with a 3D coordinate. </em> <a href="#a3"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>abstract <a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a4">getPromotedSurfaceCoordinate</a> (<a class="el" href="a00162.htm">CoordSurf</a> surf_coord)  throws SrmException</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns a 3D coordinate representing the same location as specified by a surface coordinate. </em> <a href="#a4"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00200.htm">SRF_LocalTangentSpaceEuclidean</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a5">createLocalTangentSpaceEuclideanSRF</a> (<a class="el" href="a00162.htm">CoordSurf</a> surf_coord, double azimuth, double false_x_origin, double false_y_origin, double offset_height)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Creates a Local Tangent Euclidean SRF with natural origin at a given position. </em> <a href="#a5"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00230.htm">SRM_SRFSM_Code</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a6">getNaturalSRFSetMemberCode</a> (<a class="el" href="a00162.htm">CoordSurf</a> src_coord, SRM_ORM_Code orm_dst, SRM_RT_Code rt_dst, <a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a> tgt_srfs)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Computes the natural SRF Set member code (region) where the Surface coordinate is located in the target SRF Set. </em> <a href="#a6"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top><a class="el" href="a00128.htm">BaseSRF_3D</a>&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a7">getNaturalSRFSetMember</a> (<a class="el" href="a00162.htm">CoordSurf</a> src_coord, SRM_ORM_Code orm_dst, SRM_RT_Code rt_dst, <a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a> tgt_srfs)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Computes the natural SRF Set member instance that the surface coordinate is located in the target SRF Set. </em> <a href="#a7"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a8">calculateGeodesicDistance</a> (<a class="el" href="a00162.htm">CoordSurf</a> src_coord, <a class="el" href="a00162.htm">CoordSurf</a> des_coord)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the geodesic distance between two surface coordinates. </em> <a href="#a8"></a><em><br><br></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#a9">calculateVerticalSeparationOffset</a> (<a class="el" href="a00367.htm#a148">SRM_DSS_Code</a> dss, <a class="el" href="a00162.htm">CoordSurf</a> surf_coord)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the vertical separation at a position. </em> <a href="#a9"></a><em><br><br></td></tr>
<tr><td colspan=2><br><h2>Static Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align=right valign=top>double&nbsp;</td><td class="memItemRight" valign=bottom><a class="el" href="a00131.htm#e0">calculateEuclideanDistance</a> (<a class="el" href="a00162.htm">CoordSurf</a> coord1, <a class="el" href="a00162.htm">CoordSurf</a> coord2)  throws SrmException     </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns the Euclidean distance between two coordinates. </em> <a href="#e0"></a><em><br><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
The <a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a> abstract class. 
<p>
<dl compact><dt><b>Author:</b></dt><dd>David Shen </dd></dl>
<dl compact><dt><b>See also:</b></dt><dd><a class="el" href="a00128.htm">BaseSRF_3D</a>, <a class="el" href="a00126.htm">BaseSRF</a> </dd></dl>

<p>
<hr><h2>Member Function Documentation</h2>
<a name="e0" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::calculateEuclideanDistance"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.calculateEuclideanDistance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>coord2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     <code> [static]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the Euclidean distance between two coordinates. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord1</em>&nbsp;</td><td>in: a coordinate in some SRF </td></tr>
    <tr><td valign=top><em>coord2</em>&nbsp;</td><td>in: a coordinate in some SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the Euclidean distance between the two <a class="el" href="a00162.htm">CoordSurf</a> coordinates (in meters). </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinates do not need to be from the same SRF. <p>
This method will make (and cache) internal conversions when the inputs coordinates are from SRFs other than <a class="el" href="a00182.htm">SRF_Celestiocentric</a>. </dd></dl>
    </td>
  </tr>
</table>
<a name="a8" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::calculateGeodesicDistance"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.calculateGeodesicDistance </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>des_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the geodesic distance between two surface coordinates. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in: the source surface coordinate in this SRF </td></tr>
    <tr><td valign=top><em>des_coord</em>&nbsp;</td><td>in: the destination surface coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the geodesic distance between the two surface coordinates (in meters) </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input surface coordinates must have been created using this SRF. </dd></dl>
    </td>
  </tr>
</table>
<a name="a9" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::calculateVerticalSeparationOffset"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.calculateVerticalSeparationOffset </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00367.htm#a148">SRM_DSS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>dss</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>surf_coord</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns the vertical separation at a position. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>dss</em>&nbsp;</td><td>in: the reference vertical offset surface model </td></tr>
    <tr><td valign=top><em>surf_coord</em>&nbsp;</td><td>in: the surface coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the vertical separation distance (in meters) </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input surface coordinate must have been created using this SRF. </dd></dl>
    </td>
  </tr>
</table>
<a name="a5" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::createLocalTangentSpaceEuclideanSRF"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00200.htm">SRF_LocalTangentSpaceEuclidean</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.createLocalTangentSpaceEuclideanSRF </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>surf_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>azimuth</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>false_x_origin</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>false_y_origin</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>offset_height</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a Local Tangent Euclidean SRF with natural origin at a given position. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>surf_coord</em>&nbsp;</td><td>in: a surface coordinate </td></tr>
    <tr><td valign=top><em>azimuth</em>&nbsp;</td><td>in: the LTE's azimuth parameter </td></tr>
    <tr><td valign=top><em>false_x_origin</em>&nbsp;</td><td>in: the LTE's false x origin </td></tr>
    <tr><td valign=top><em>false_y_origin</em>&nbsp;</td><td>in: the LTE's false y origin </td></tr>
    <tr><td valign=top><em>offset_height</em>&nbsp;</td><td>in: the LTE's offset height </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a local tangent euclidean object </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input surface coordinate must have been created using this SRF. </dd></dl>
    </td>
  </tr>
</table>
<a name="a1" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::createSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00162.htm">CoordSurf</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.createSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top">double&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp1</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>double&nbsp;</td>
          <td class="mdname" nowrap> <em>coord_surf_comp2</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2"><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a surface coordinate object with initial values. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord_surf_comp1</em>&nbsp;</td><td>in: the values of the first component of the surface coordinate </td></tr>
    <tr><td valign=top><em>coord_surf_comp2</em>&nbsp;</td><td>in: the values of the second component of the surface coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a surface coordinate object </dd></dl>

<p>
Implemented in <a class="el" href="a00183.htm#a4">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00187.htm#a5">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00191.htm#a5">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00207.htm#a5">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a5">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a4">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a5">SRM.SRF_PolarStereographic</a>, and <a class="el" href="a00218.htm#a5">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a0" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::createSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00162.htm">CoordSurf</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.createSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="mdname1" valign="top" nowrap>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap><code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Creates a surface coordinate object with default [ Double.NaN, Double.NaN ]. 
<p>
<dl compact><dt><b>Returns:</b></dt><dd>a surface coordinate object </dd></dl>

<p>
Implemented in <a class="el" href="a00183.htm#a3">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00187.htm#a4">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00191.htm#a4">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00207.htm#a4">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a4">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a3">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a4">SRM.SRF_PolarStereographic</a>, and <a class="el" href="a00218.htm#a4">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a3" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::getAssociatedSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00162.htm">CoordSurf</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.getAssociatedSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00138.htm">Coord3D</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException<code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a surface coordinate associated with a 3D coordinate. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord</em>&nbsp;</td><td>in: a 3D coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a surface coordinate object in this SRF </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>

<p>
Implemented in <a class="el" href="a00183.htm#a5">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00187.htm#a11">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00191.htm#a13">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00207.htm#a11">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a14">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a5">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a12">SRM.SRF_PolarStereographic</a>, and <a class="el" href="a00218.htm#a12">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a7" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::getNaturalSRFSetMember"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00128.htm">BaseSRF_3D</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.getNaturalSRFSetMember </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_ORM_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_RT_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the natural SRF Set member instance that the surface coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source surface coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the Rt for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member instance for the destination SRF Set </dd></dl>
    </td>
  </tr>
</table>
<a name="a6" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::getNaturalSRFSetMemberCode"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> <a class="el" href="a00230.htm">SRM_SRFSM_Code</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.getNaturalSRFSetMemberCode </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>src_coord</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_ORM_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>orm_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap>SRM_RT_Code&nbsp;</td>
          <td class="mdname" nowrap> <em>rt_dst</em>, </td>
        </tr>
        <tr>
          <td></td>
          <td></td>
          <td class="md" nowrap><a class="el" href="a00367.htm#a153">SRM_SRFS_Code</a>&nbsp;</td>
          <td class="mdname" nowrap> <em>tgt_srfs</em></td>
        </tr>
        <tr>
          <td></td>
          <td class="md">)&nbsp;</td>
          <td class="md" colspan="2">  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Computes the natural SRF Set member code (region) where the Surface coordinate is located in the target SRF Set. 
<p>
<dl compact><dt><b>Note:</b></dt><dd>The input coordinate must have been created using this SRF. </dd></dl>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>src_coord</em>&nbsp;</td><td>in : the source surface coordinate in an SRF </td></tr>
    <tr><td valign=top><em>orm_dst</em>&nbsp;</td><td>in : the ORM for the destination SRF Set </td></tr>
    <tr><td valign=top><em>rt_dst</em>&nbsp;</td><td>in : the RT for the destination SRF Set </td></tr>
    <tr><td valign=top><em>tgt_srfs</em>&nbsp;</td><td>in : the destination SRF Set Code </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>the SRF Set Member code for the destination SRF Set </dd></dl>
    </td>
  </tr>
</table>
<a name="a4" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::getPromotedSurfaceCoordinate"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> abstract <a class="el" href="a00138.htm">Coord3D</a> SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.getPromotedSurfaceCoordinate </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>surf_coord</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException<code> [pure virtual]</code></td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Returns a 3D coordinate representing the same location as specified by a surface coordinate. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>surf_coord</em>&nbsp;</td><td>in: a surface coordinate in this SRF </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>a 3D coordinate object in this SRF </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input surface coordinate must have been created using this SRF. </dd></dl>

<p>
Implemented in <a class="el" href="a00183.htm#a6">SRM.SRF_Celestiodetic</a>, <a class="el" href="a00187.htm#a12">SRM.SRF_EquidistantCylindrical</a>, <a class="el" href="a00191.htm#a14">SRM.SRF_LambertConformalConic</a>, <a class="el" href="a00207.htm#a12">SRM.SRF_Mercator</a>, <a class="el" href="a00208.htm#a15">SRM.SRF_ObliqueMercatorSpherical</a>, <a class="el" href="a00210.htm#a6">SRM.SRF_Planetodetic</a>, <a class="el" href="a00211.htm#a13">SRM.SRF_PolarStereographic</a>, and <a class="el" href="a00218.htm#a13">SRM.SRF_TransverseMercator</a>.    </td>
  </tr>
</table>
<a name="a2" doxytag="SRM::BaseSRF_WithEllipsoidalHeight::getSurfaceCoordinateValues"></a><p>
<table class="mdTable" width="100%" cellpadding="2" cellspacing="0">
  <tr>
    <td class="mdRow">
      <table cellpadding="0" cellspacing="0" border="0">
        <tr>
          <td class="md" nowrap valign="top"> double [] SRM.<a class="el" href="a00131.htm">BaseSRF_WithEllipsoidalHeight</a>.getSurfaceCoordinateValues </td>
          <td class="md" valign="top">(&nbsp;</td>
          <td class="md" nowrap valign="top"><a class="el" href="a00162.htm">CoordSurf</a>&nbsp;</td>
          <td class="mdname1" valign="top" nowrap> <em>coord_surf</em>          </td>
          <td class="md" valign="top">&nbsp;)&nbsp;</td>
          <td class="md" nowrap>  throws SrmException     </td>
        </tr>

      </table>
    </td>
  </tr>
</table>
<table cellspacing=5 cellpadding=0 border=0>
  <tr>
    <td>
      &nbsp;
    </td>
    <td>

<p>
Retrieves a coordinate surface component values. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign=top><em>coord_surf</em>&nbsp;</td><td>in: a surface coordinate </td></tr>
  </table>
</dl>
<dl compact><dt><b>Returns:</b></dt><dd>an array of size 2 containing the component values for the surface coordinate </dd></dl>
<dl compact><dt><b>Note:</b></dt><dd>The input surface coordinate must have been created using this SRF. </dd></dl>
    </td>
  </tr>
</table>
<hr>The documentation for this class was generated from the following file:<ul>
<li>BaseSRF_WithEllipsoidalHeight.java</ul>
<hr size="1">
<table width="100%">
<tr valign="middle">
<td align="left"><strong>Spatial Reference Model Java API</strong></td>
<td align="right"><strong>
Version 4.4.0 - January 21, 2010
</strong></td>
</tr>
<tr valign="middle">
<td align="left">Copyright &copy; 2010 <a href="http://www.sedris.org">SEDRIS</a>&#153;</td>
<td align="right">Docs by <a href="http://www.doxygen.org/index.html">Doxygen</a> 1.3.2</td>
</tr>
</table>
</body>
</html>
